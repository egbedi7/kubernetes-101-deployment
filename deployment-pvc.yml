apiVersion: v1
kind: Namespace
metadata:
  name: hpa-ns
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-nginx
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: manual
  hostPath:
    path: "/home/usman/Projects/kubernetes-training/pv"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-nginx
  namespace: pv-ns
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: manual
---  
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-deployment-pvc
  namespace: pv-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-app-pvc
  template:
    metadata:
      labels:
        app: my-app-pvc
    spec:
      volumes:
        - name: data-volume
          persistentVolumeClaim:
            claimName: pvc-nginx
      containers:
        - name: nginx-container
          image: nginx
          ports:
            - containerPort: 80
          resources:
            requests:
              memory: "64Mi"  # Minimum memory required
              cpu: "50m"      # Minimum CPU required
            limits:
              memory: "128Mi" # Maximum memory allowed
              cpu: "200m"
          volumeMounts:
            - mountPath: "/var/log/nginx"
              name: data-volume
---
apiVersion: v1
kind: Service
metadata:
  name: deployment-service-pvc
  namespace: pv-ns
spec:
  type: NodePort
  selector:
    app: my-app-pvc 
  ports:
    - protocol: TCP
      port: 8080 # where user will send the request 
      targetPort: 80 # service will send the request to pod
      nodePort: 30004  # Specify a port in the NodePort range


